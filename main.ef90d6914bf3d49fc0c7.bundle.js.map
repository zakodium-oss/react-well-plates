{"version":3,"file":"main.ef90d6914bf3d49fc0c7.bundle.js","sources":["webpack:///./src/WellPlate.tsx"],"sourcesContent":["\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importStar(require(\"react\"));\nconst well_plates_1 = require(\"well-plates\");\nconst Well_1 = __importDefault(require(\"./Well\"));\nconst WellPlate = (props) => {\n    const { rows, columns, format, onClick, onMouseDown, onMouseUp, onLeave, onEnter, wellStyle, wellClassName, ...otherProps } = props;\n    const plate = react_1.useMemo(() => {\n        return new well_plates_1.WellPlate({ rows, columns, positionFormat: format });\n    }, [rows, columns, format]);\n    const onClickCallback = react_1.useCallback((label, e) => {\n        if (onClick)\n            onClick(label, plate, e);\n    }, [onClick, plate]);\n    const onMouseDownCallback = react_1.useCallback((label, e) => {\n        if (onMouseDown)\n            onMouseDown(label, plate, e);\n    }, [onMouseDown, plate]);\n    const onMouseUpCallback = react_1.useCallback((label, e) => {\n        if (onMouseUp)\n            onMouseUp(label, plate, e);\n    }, [onMouseUp, plate]);\n    const onLeaveCallback = react_1.useCallback((label, e) => {\n        if (onLeave)\n            onLeave(label, plate, e);\n    }, [onLeave, plate]);\n    const onEnterCallback = react_1.useCallback((label, e) => {\n        if (onEnter)\n            onEnter(label, plate, e);\n    }, [onEnter, plate]);\n    const wellStyleCallback = react_1.useCallback((label) => {\n        if (wellStyle)\n            return wellStyle(label, plate);\n    }, [wellStyle, plate]);\n    const wellClassNameCallback = react_1.useCallback((label) => {\n        if (wellClassName)\n            return wellClassName(label, plate);\n    }, [wellClassName, plate]);\n    return (react_1.default.createElement(exports.WellPlateInternal, Object.assign({ plate: plate, onClick: onClickCallback, onMouseDown: onMouseDownCallback, onLeave: onLeaveCallback, onEnter: onEnterCallback, wellStyle: wellStyleCallback, wellClassName: wellClassNameCallback }, otherProps)));\n};\nexports.WellPlateInternal = (props) => {\n    const { plate, wellSize = 40 } = props;\n    const rowLabels = plate.rowLabels;\n    const columnLabels = plate.columnLabels;\n    const boxPadding = 4;\n    const boxBorder = 1;\n    const headerStyle = {\n        width: wellSize,\n        textAlign: 'center'\n    };\n    const wellStyle = {\n        width: wellSize,\n        height: wellSize,\n        userSelect: 'none'\n    };\n    const rowStyle = {\n        display: 'flex',\n        alignItems: 'center',\n        height: wellSize\n    };\n    const boxStyle = {\n        paddingBottom: boxPadding,\n        paddingRight: boxPadding,\n        borderWidth: boxBorder,\n        borderStyle: 'solid',\n        borderColor: 'black',\n        width: wellSize * (plate.columns + 1) + boxPadding + boxBorder\n    };\n    const headerColumnLabels = columnLabels.map((columnLabel) => (react_1.default.createElement(\"div\", { key: columnLabel, style: headerStyle }, columnLabel)));\n    const rows = rowLabels.map((rowLabel, rowIdx) => {\n        const columns = columnLabels.map((columnLabel, columnIdx) => {\n            const label = plate.getPositionCode({ row: rowIdx, column: columnIdx });\n            return (react_1.default.createElement(\"div\", { key: columnLabel, style: wellStyle },\n                react_1.default.createElement(Well_1.default, { className: props.wellClassName && props.wellClassName(label), style: props.wellStyle && props.wellStyle(label), onClick: props.onClick, onEnter: props.onEnter, onLeave: props.onLeave, onMouseDown: props.onMouseDown, onMouseUp: props.onMouseUp, value: label, size: wellSize })));\n        });\n        return (react_1.default.createElement(\"div\", { key: rowLabel, style: rowStyle },\n            react_1.default.createElement(\"div\", { style: headerStyle }, rowLabel),\n            columns));\n    });\n    return (react_1.default.createElement(\"div\", { style: boxStyle },\n        react_1.default.createElement(\"div\", { style: rowStyle },\n            react_1.default.createElement(\"div\", { style: headerStyle }),\n            headerColumnLabels),\n        rows));\n};\nWellPlate.defaultProps = {\n    wellSize: 40\n};\nexports.default = WellPlate;\ntry {\n    // @ts-ignore\n    exports.WellPlateInternal.displayName = \"WellPlateInternal\";\n    // @ts-ignore\n    exports.WellPlateInternal.__docgenInfo = { \"description\": \"\", \"displayName\": \"WellPlateInternal\", \"props\": { \"plate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"plate\", \"required\": true, \"type\": { \"name\": \"WellPlate<any>\" } }, \"wellClassName\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"wellClassName\", \"required\": false, \"type\": { \"name\": \"(label: string) => string\" } }, \"wellStyle\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"wellStyle\", \"required\": false, \"type\": { \"name\": \"(label: any) => CSSProperties\" } }, \"onClick\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClick\", \"required\": false, \"type\": { \"name\": \"(well: string, e: any) => void\" } }, \"onEnter\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onEnter\", \"required\": false, \"type\": { \"name\": \"(well: string, e: SyntheticEvent<Element, Event>) => void\" } }, \"onLeave\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onLeave\", \"required\": false, \"type\": { \"name\": \"(well: string, e: SyntheticEvent<Element, Event>) => void\" } }, \"onMouseDown\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onMouseDown\", \"required\": false, \"type\": { \"name\": \"(well: string, e: any) => void\" } }, \"onMouseUp\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onMouseUp\", \"required\": false, \"type\": { \"name\": \"(well: string, e: any) => void\" } }, \"wellSize\": { \"defaultValue\": { value: \"40\" }, \"description\": \"\", \"name\": \"wellSize\", \"required\": false, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/WellPlate.tsx#WellPlateInternal\"] = { docgenInfo: exports.WellPlateInternal.__docgenInfo, name: \"WellPlateInternal\", path: \"src/WellPlate.tsx#WellPlateInternal\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }\ntry {\n    // @ts-ignore\n    WellPlate.displayName = \"WellPlate\";\n    // @ts-ignore\n    WellPlate.__docgenInfo = { \"description\": \"\", \"displayName\": \"WellPlate\", \"props\": { \"rows\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rows\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"columns\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"columns\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"format\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"format\", \"required\": false, \"type\": { \"name\": \"PositionFormat\" } }, \"wellClassName\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"wellClassName\", \"required\": false, \"type\": { \"name\": \"(label: string, wellPlate: WellPlate<any>) => string\" } }, \"wellStyle\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"wellStyle\", \"required\": false, \"type\": { \"name\": \"(label: any, wellPlate: WellPlate<any>) => CSSProperties\" } }, \"onClick\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClick\", \"required\": false, \"type\": { \"name\": \"(well: string, wellPlate: WellPlate<any>, e: any) => void\" } }, \"onEnter\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onEnter\", \"required\": false, \"type\": { \"name\": \"(well: string, wellPlate: WellPlate<any>, e: SyntheticEvent<Element, Event>) => void\" } }, \"onLeave\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onLeave\", \"required\": false, \"type\": { \"name\": \"(well: string, wellPlate: WellPlate<any>, e: SyntheticEvent<Element, Event>) => void\" } }, \"onMouseDown\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onMouseDown\", \"required\": false, \"type\": { \"name\": \"(well: string, wellPlate: WellPlate<any>, e: any) => void\" } }, \"onMouseUp\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onMouseUp\", \"required\": false, \"type\": { \"name\": \"(well: string, wellPlate: WellPlate<any>, e: any) => void\" } }, \"wellSize\": { \"defaultValue\": { value: \"40\" }, \"description\": \"\", \"name\": \"wellSize\", \"required\": false, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/WellPlate.tsx#WellPlate\"] = { docgenInfo: WellPlate.__docgenInfo, name: \"WellPlate\", path: \"src/WellPlate.tsx#WellPlate\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }\n"],"mappings":"AACA","sourceRoot":""}