(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"./.storybook/preview.js-generated-config-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,"parameters",(function(){return parameters}));__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),parameters={};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":return Object(ClientApi.d)(value);case"argTypes":return Object(ClientApi.b)(value);case"decorators":return value.forEach((function(decorator){return Object(ClientApi.f)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return Object(ClientApi.g)(loader,!1)}));case"parameters":return Object(ClientApi.h)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return Object(ClientApi.c)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return Object(ClientApi.e)(enhancer)}));case"render":return Object(ClientApi.i)(value);case"globals":case"globalTypes":var v={};return v[key]=value,Object(ClientApi.h)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./generated-stories-entry.js":function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js").configure)([__webpack_require__("./stories sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$"),__webpack_require__("./stories sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$")],module,!1)}).call(this,__webpack_require__("./node_modules/webpack/buildin/module.js")(module))},"./src/WellPicker.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return RangeSelectionMode})),__webpack_require__.d(__webpack_exports__,"a",(function(){return MultiWellPicker}));__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.set.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var RangeSelectionMode,react__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__("./node_modules/react/index.js"),well_plates__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__("./node_modules/well-plates/lib-es6/index.js"),_util_WellPlateInternal__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__("./src/util/WellPlateInternal.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["rows","columns","format","value","renderText","disabled","onChange","style","className","rangeSelectionMode","pickMode"];function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _createForOfIteratorHelper(o,allowArrayLike){var it="undefined"!=typeof Symbol&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e2){throw _e2},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=it.call(o)},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e3){didErr=!0,err=_e3},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||_unsupportedIterableToArray(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}!function(RangeSelectionMode){RangeSelectionMode.columns="columns",RangeSelectionMode.rows="rows",RangeSelectionMode.zone="zone",RangeSelectionMode.off="off"}(RangeSelectionMode||(RangeSelectionMode={}));var defaultWellStyles={userSelect:"none",WebkitUserSelect:"none",cursor:"default"},defaultWellPickerStyle=function defaultWellPickerStyle(_ref){var booked=_ref.booked,disabled=_ref.disabled,selected=_ref.selected,styles={borderColor:"black"};return booked&&(styles.borderColor="orange"),disabled&&(styles.backgroundColor="lightgray"),selected&&(styles.backgroundColor="lightgreen"),styles},MultiWellPicker=function MultiWellPicker(_ref2){var rows=_ref2.rows,columns=_ref2.columns,format=_ref2.format,value=_ref2.value,_ref2$renderText=_ref2.renderText,text=void 0===_ref2$renderText?function(_ref3){return _ref3.label}:_ref2$renderText,_ref2$disabled=_ref2.disabled,disabled=void 0===_ref2$disabled?[]:_ref2$disabled,onChange=_ref2.onChange,_ref2$style=_ref2.style,style=void 0===_ref2$style?defaultWellPickerStyle:_ref2$style,className=_ref2.className,_ref2$rangeSelectionM=_ref2.rangeSelectionMode,rangeSelectionMode=void 0===_ref2$rangeSelectionM?RangeSelectionMode.zone:_ref2$rangeSelectionM,_ref2$pickMode=_ref2.pickMode,pickMode=void 0===_ref2$pickMode||_ref2$pickMode,wellPlateProps=_objectWithoutProperties(_ref2,_excluded),wellPlate=Object(react__WEBPACK_IMPORTED_MODULE_17__.useMemo)((function(){return new well_plates__WEBPACK_IMPORTED_MODULE_18__.b({rows:rows,columns:columns,positionFormat:format})}),[rows,columns,format]),valueSet=Object(react__WEBPACK_IMPORTED_MODULE_17__.useMemo)((function(){return new Set(value.map((function(label){return wellPlate.getPosition(label,"index")})))}),[value,wellPlate]),disabledSet=Object(react__WEBPACK_IMPORTED_MODULE_17__.useMemo)((function(){return new Set(disabled.map((function(label){return wellPlate.getPosition(label,"index")})))}),[disabled,wellPlate]),_useState2=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_17__.useState)(null),2),startWell=_useState2[0],setStartWell=_useState2[1],_useState4=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_17__.useState)(new Set),2),bookedSet=_useState4[0],setBooked=_useState4[1],selectRange=Object(react__WEBPACK_IMPORTED_MODULE_17__.useCallback)((function(start,end){var range;switch(rangeSelectionMode){case RangeSelectionMode.zone:range=wellPlate.getPositionSubset(start,end,well_plates__WEBPACK_IMPORTED_MODULE_18__.a.zone,"index");break;case RangeSelectionMode.columns:case RangeSelectionMode.rows:range=wellPlate.getPositionSubset(start,end,rangeSelectionMode===RangeSelectionMode.columns?well_plates__WEBPACK_IMPORTED_MODULE_18__.a.columns:well_plates__WEBPACK_IMPORTED_MODULE_18__.a.rows,"index");break;case RangeSelectionMode.off:return;default:throw new Error("invalid range selection mode")}setBooked(new Set(range))}),[rangeSelectionMode,wellPlate]),bookSelection=Object(react__WEBPACK_IMPORTED_MODULE_17__.useCallback)((function(toggle){if(0!==bookedSet.size){var _step,newValue=[],_iterator=_createForOfIteratorHelper(bookedSet);try{for(_iterator.s();!(_step=_iterator.n()).done;){var bookedEl=_step.value;disabledSet.has(wellPlate.getPosition(bookedEl,"index"))||toggle&&valueSet.has(bookedEl)||newValue.push(bookedEl)}}catch(err){_iterator.e(err)}finally{_iterator.f()}if(toggle){var _step2,_iterator2=_createForOfIteratorHelper(valueSet);try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var selected=_step2.value;bookedSet.has(selected)||newValue.push(selected)}}catch(err){_iterator2.e(err)}finally{_iterator2.f()}}onChange(newValue,newValue.map((function(val){return wellPlate.getPosition(val,"formatted")})))}}),[bookedSet,onChange,disabledSet,valueSet,wellPlate]),toggleWell=Object(react__WEBPACK_IMPORTED_MODULE_17__.useCallback)((function(well){if(valueSet.has(well)){var valueSetCopy=new Set(valueSet);valueSetCopy.delete(well);var newValue=Array.from(valueSetCopy);onChange(newValue,newValue.map((function(val){return wellPlate.getPosition(val,"formatted")})))}else if(disabledSet.has(well));else{var _newValue=[].concat(_toConsumableArray(valueSet),[well]);onChange(_newValue,_newValue.map((function(val){return wellPlate.getPosition(val,"formatted")})))}}),[valueSet,onChange,disabledSet,wellPlate]),classNameCallback=Object(react__WEBPACK_IMPORTED_MODULE_17__.useCallback)((function(index){if(className)return className({booked:bookedSet.has(index),disabled:disabledSet.has(index),selected:valueSet.has(index),label:wellPlate.getPosition(index,"formatted"),position:wellPlate.getPosition(index,"row_column"),index:index,wellPlate:wellPlate})}),[valueSet,bookedSet,disabledSet,className,wellPlate]),textCallback=Object(react__WEBPACK_IMPORTED_MODULE_17__.useCallback)((function(index){var label=wellPlate.getPosition(index,"formatted");return text({index:index,label:label,wellPlate:wellPlate,booked:bookedSet.has(index),position:wellPlate.getPosition(index,"row_column"),selected:valueSet.has(index),disabled:disabledSet.has(index)})}),[text,wellPlate,bookedSet,valueSet,disabledSet]),styleCallback=Object(react__WEBPACK_IMPORTED_MODULE_17__.useCallback)((function(index){return Object.assign({},defaultWellStyles,null==style?void 0:style({booked:bookedSet.has(index),disabled:disabledSet.has(index),selected:valueSet.has(index),index:index,label:wellPlate.getPosition(index,"formatted"),position:wellPlate.getPosition(index,"row_column"),wellPlate:wellPlate}))}),[disabledSet,bookedSet,valueSet,style,wellPlate]),clear=Object(react__WEBPACK_IMPORTED_MODULE_17__.useCallback)((function(event){event.shiftKey||isCtrlKey(event)?bookSelection(!0):bookSelection(!1),setStartWell(null),setBooked(new Set)}),[bookSelection]);return Object(react__WEBPACK_IMPORTED_MODULE_17__.useEffect)((function(){return window.addEventListener("mouseup",clear),window.addEventListener("mouseleave",clear),function(){window.removeEventListener("mouseup",clear),window.removeEventListener("mouseleave",clear)}}),[clear]),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_util_WellPlateInternal__WEBPACK_IMPORTED_MODULE_19__.a,Object.assign({},wellPlateProps,{plate:wellPlate,wellStyle:styleCallback,wellClassName:classNameCallback,text:textCallback,onEnter:function onEnter(well){null!==startWell&&selectRange(startWell,well)},onLeave:function onLeave(well){startWell===well&&selectRange(well,well)},onMouseDown:function onMouseDown(well,event){setStartWell(well),event.shiftKey||isCtrlKey(event)||(disabledSet.has(wellPlate.getPosition(well,"index"))?onChange([],[]):onChange([well],[wellPlate.getPosition(well,"formatted")]))},onClick:function onClick(well,e){(e.shiftKey||isCtrlKey(e))&&pickMode&&(toggleWell(well),e.stopPropagation())}}))};function isCtrlKey(event){return"MacIntel"===navigator.platform?event.metaKey:event.ctrlKey}MultiWellPicker.displayName="MultiWellPicker";try{MultiWellPicker.displayName="MultiWellPicker",MultiWellPicker.__docgenInfo={description:"",displayName:"MultiWellPicker",props:{displayAsGrid:{defaultValue:null,description:"",name:"displayAsGrid",required:!1,type:{name:"boolean"}},wellSize:{defaultValue:null,description:"",name:"wellSize",required:!1,type:{name:"number"}},rows:{defaultValue:null,description:"",name:"rows",required:!0,type:{name:"number"}},columns:{defaultValue:null,description:"",name:"columns",required:!0,type:{name:"number"}},format:{defaultValue:null,description:"",name:"format",required:!1,type:{name:"enum",value:[{value:'"SEQUENTIAL"'},{value:'"LETTER_NUMBER"'},{value:'"NUMBER_NUMBER"'}]}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"(string | number)[]"}},disabled:{defaultValue:{value:"[]"},description:"",name:"disabled",required:!1,type:{name:"(string | number)[]"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(value: number[], label: string[]) => void"}},style:{defaultValue:{value:"({ booked, disabled, selected }) => {\n  const styles: CSSProperties = {\n    borderColor: 'black',\n  };\n  if (booked) {\n    styles.borderColor = 'orange';\n  }\n  if (disabled) {\n    styles.backgroundColor = 'lightgray';\n  }\n  if (selected) {\n    styles.backgroundColor = 'lightgreen';\n  }\n  return styles;\n}"},description:"",name:"style",required:!1,type:{name:"StyleParam"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"ClassNameParam"}},renderText:{defaultValue:null,description:"",name:"renderText",required:!1,type:{name:"(cell: PickCell) => ReactNode"}},rangeSelectionMode:{defaultValue:{value:"RangeSelectionMode.zone"},description:"",name:"rangeSelectionMode",required:!1,type:{name:"enum",value:[{value:'"columns"'},{value:'"rows"'},{value:'"zone"'},{value:'"off"'}]}},pickMode:{defaultValue:{value:"true"},description:"",name:"pickMode",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/WellPicker.tsx#MultiWellPicker"]={docgenInfo:MultiWellPicker.__docgenInfo,name:"MultiWellPicker",path:"src/WellPicker.tsx#MultiWellPicker"})}catch(__react_docgen_typescript_loader_error){}},"./src/index.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return WellPicker.b})),__webpack_require__.d(__webpack_exports__,"a",(function(){return WellPicker.a})),__webpack_require__.d(__webpack_exports__,"c",(function(){return WellPlate_WellPlate}));var WellPicker=__webpack_require__("./src/WellPicker.tsx"),react=(__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js")),lib_es6=__webpack_require__("./node_modules/well-plates/lib-es6/index.js"),WellPlateInternal=__webpack_require__("./src/util/WellPlateInternal.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["rows","columns","format","onClick","onMouseDown","onMouseUp","onLeave","onEnter","wellStyle","wellClassName","renderText","headerStyle"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var WellPlate_WellPlate=function WellPlate(props){var rows=props.rows,columns=props.columns,format=props.format,onClick=props.onClick,onMouseDown=props.onMouseDown,onLeave=(props.onMouseUp,props.onLeave),onEnter=props.onEnter,wellStyle=props.wellStyle,wellClassName=props.wellClassName,text=props.renderText,headerStyle=props.headerStyle,otherProps=_objectWithoutProperties(props,_excluded),wellPlate=Object(react.useMemo)((function(){return new lib_es6.b({rows:rows,columns:columns,positionFormat:format})}),[rows,columns,format]),onClickCallback=Object(react.useCallback)((function(value,e){var label=wellPlate.getPosition(value,"formatted");onClick&&onClick(value,label,wellPlate,e)}),[onClick,wellPlate]),onMouseDownCallback=Object(react.useCallback)((function(value,e){var label=wellPlate.getPosition(value,"formatted");onMouseDown&&onMouseDown(value,label,wellPlate,e)}),[onMouseDown,wellPlate]),onLeaveCallback=Object(react.useCallback)((function(value,e){var label=wellPlate.getPosition(value,"formatted");onLeave&&onLeave(value,label,wellPlate,e)}),[onLeave,wellPlate]),onEnterCallback=Object(react.useCallback)((function(value,e){var label=wellPlate.getPosition(value,"formatted");onEnter&&onEnter(value,label,wellPlate,e)}),[onEnter,wellPlate]),wellStyleCallback=Object(react.useCallback)((function(index){var label=wellPlate.getPosition(index,"formatted"),position=wellPlate.getPosition(index,"row_column");return Object.assign({userSelect:"text",WebkitUserSelect:"text"},null==wellStyle?void 0:wellStyle({index:index,label:label,wellPlate:wellPlate,position:position}))}),[wellStyle,wellPlate]),headerStyleCallback=Object(react.useCallback)((function(cell){return Object.assign({userSelect:"text",WebkitUserSelect:"text"},null==headerStyle?void 0:headerStyle(cell))}),[headerStyle]),wellClassNameCallback=Object(react.useCallback)((function(index){var label=wellPlate.getPosition(index,"formatted"),position=wellPlate.getPosition(index,"row_column");if(wellClassName)return wellClassName({index:index,label:label,wellPlate:wellPlate,position:position})}),[wellClassName,wellPlate]),textCallback=Object(react.useCallback)((function(index){var label=wellPlate.getPosition(index,"formatted"),position=wellPlate.getPosition(index,"row_column");return text?text({index:index,label:label,wellPlate:wellPlate,position:position}):label}),[text,wellPlate]);return Object(jsx_runtime.jsx)(WellPlateInternal.a,Object.assign({plate:wellPlate,onClick:onClickCallback,text:textCallback,onMouseDown:onMouseDownCallback,onLeave:onLeaveCallback,onEnter:onEnterCallback,wellStyle:wellStyleCallback,wellClassName:wellClassNameCallback,headerStyle:headerStyleCallback},otherProps))};WellPlate_WellPlate.displayName="WellPlate";try{WellPlate_WellPlate.displayName="WellPlate",WellPlate_WellPlate.__docgenInfo={description:"",displayName:"WellPlate",props:{rows:{defaultValue:null,description:"",name:"rows",required:!0,type:{name:"number"}},columns:{defaultValue:null,description:"",name:"columns",required:!0,type:{name:"number"}},format:{defaultValue:null,description:"",name:"format",required:!1,type:{name:"enum",value:[{value:'"SEQUENTIAL"'},{value:'"LETTER_NUMBER"'},{value:'"NUMBER_NUMBER"'}]}},displayAsGrid:{defaultValue:null,description:"",name:"displayAsGrid",required:!1,type:{name:"boolean"}},wellClassName:{defaultValue:null,description:"",name:"wellClassName",required:!1,type:{name:"(cell: Cell) => string"}},renderText:{defaultValue:null,description:"",name:"renderText",required:!1,type:{name:"(cell: Cell) => ReactNode"}},wellStyle:{defaultValue:null,description:"",name:"wellStyle",required:!1,type:{name:"(cell: Cell) => CSSProperties"}},headerClassName:{defaultValue:null,description:"",name:"headerClassName",required:!1,type:{name:"(cell: HeaderCell) => string"}},headerStyle:{defaultValue:null,description:"",name:"headerStyle",required:!1,type:{name:"(cell: HeaderCell) => CSSProperties"}},headerText:{defaultValue:null,description:"",name:"headerText",required:!1,type:{name:"(cell: HeaderCell) => ReactNode"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(value: number, label: string, wellPlate: WellPlate<unknown>, e: MouseEvent<Element, MouseEvent>) => void"}},onEnter:{defaultValue:null,description:"",name:"onEnter",required:!1,type:{name:"(value: number, label: string, wellPlate: WellPlate<unknown>, e: SyntheticEvent<Element, Event>) => void"}},onLeave:{defaultValue:null,description:"",name:"onLeave",required:!1,type:{name:"(value: number, label: string, wellPlate: WellPlate<unknown>, e: SyntheticEvent<Element, Event>) => void"}},onMouseDown:{defaultValue:null,description:"",name:"onMouseDown",required:!1,type:{name:"(value: number, label: string, wellPlate: WellPlate<unknown>, e: MouseEvent<Element, MouseEvent>) => void"}},onMouseUp:{defaultValue:null,description:"",name:"onMouseUp",required:!1,type:{name:"(value: number, label: string, wellPlate: WellPlate<unknown>, e: MouseEvent<Element, MouseEvent>) => void"}},wellSize:{defaultValue:null,description:"",name:"wellSize",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/WellPlate.tsx#WellPlate"]={docgenInfo:WellPlate_WellPlate.__docgenInfo,name:"WellPlate",path:"src/WellPlate.tsx#WellPlate"})}catch(__react_docgen_typescript_loader_error){}},"./src/util/WellPlateInternal.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return WellPlateInternal_WellPlateInternal}));__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),Well_wellStyle={borderRadius:"50%",borderWidth:1,borderStyle:"solid",display:"flex",alignItems:"center",textAlign:"center"},Well_Well=function Well(props){var size=props.size,customStyles=props.style,wellMargin=Math.round(size/12),style=Object.assign({},Well_wellStyle,{width:size-2*wellMargin,height:size-2*wellMargin,margin:wellMargin},customStyles),displayableValue=props.text(props.value);return Object(jsx_runtime.jsx)("div",{onClick:props.onClick&&function(e){return props.onClick(props.value,e)},onMouseEnter:props.onEnter&&function(e){return props.onEnter(props.value,e)},onMouseLeave:props.onLeave&&function(e){return props.onLeave(props.value,e)},onMouseUp:props.onMouseUp&&function(e){return props.onMouseUp(props.value,e)},onMouseDown:props.onMouseDown&&function(e){return props.onMouseDown(props.value,e)},className:props.className,style:style,children:Object(jsx_runtime.jsx)("div",{style:{width:"100%"},children:void 0===displayableValue?props.wellPlate.getPosition(props.value,"formatted"):displayableValue})})};Well_Well.displayName="Well";var util_Well=Well_Well;try{Well_Well.displayName="Well",Well_Well.__docgenInfo={description:"",displayName:"Well",props:{size:{defaultValue:null,description:"",name:"size",required:!0,type:{name:"number"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"number"}},wellPlate:{defaultValue:null,description:"",name:"wellPlate",required:!0,type:{name:"WellPlate<unknown>"}},text:{defaultValue:null,description:"",name:"text",required:!1,type:{name:"(index: number) => ReactNode"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(value: number, e: MouseEvent<Element, MouseEvent>) => void"}},onEnter:{defaultValue:null,description:"",name:"onEnter",required:!1,type:{name:"(value: number, e: SyntheticEvent<Element, Event>) => void"}},onLeave:{defaultValue:null,description:"",name:"onLeave",required:!1,type:{name:"(value: number, e: SyntheticEvent<Element, Event>) => void"}},onMouseUp:{defaultValue:null,description:"",name:"onMouseUp",required:!1,type:{name:"(value: number, e: MouseEvent<Element, MouseEvent>) => void"}},onMouseDown:{defaultValue:null,description:"",name:"onMouseDown",required:!1,type:{name:"(value: number, e: MouseEvent<Element, MouseEvent>) => void"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/util/Well.tsx#Well"]={docgenInfo:Well_Well.__docgenInfo,name:"Well",path:"src/util/Well.tsx#Well"})}catch(__react_docgen_typescript_loader_error){}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var plateDefaultStyles={userSelect:"none",WebkitUserSelect:"none"},WellPlateInternal_WellPlateInternal=function WellPlateInternal(props){var _props$displayAsGrid=props.displayAsGrid;return void 0!==_props$displayAsGrid&&_props$displayAsGrid?Object(jsx_runtime.jsx)(GridWellPlateInternal,Object.assign({},props)):Object(jsx_runtime.jsx)(DefaultWellPlateInternal,Object.assign({},props))};function GridWellPlateInternal(props){for(var plate=props.plate,columnLabels=plate.columnLabels,rowLabels=plate.rowLabels,cellStyle={borderStyle:"solid",borderColor:"gray",borderWidth:1},values=[],i=0;i<=rowLabels.length-1;i++){values.push({index:void 0,label:rowLabels[i],isHeader:!0,position:{column:-1,row:i}});for(var j=0;j<=columnLabels.length-1;j++){var position={row:i,column:j},_index=plate.getPosition(position,"index");values.push({index:_index,label:plate.getPosition(position,"formatted"),isHeader:!1,position:position})}}return Object(jsx_runtime.jsx)("div",{style:Object.assign({display:"grid",gridTemplateColumns:"max-content repeat("+columnLabels.length+", 1fr)",gridTemplateRows:"max-content repeat("+rowLabels.length+", 1fr)"},plateDefaultStyles,cellStyle),children:[{index:void 0,label:"",isHeader:!0,position:{row:-1,column:-1}}].concat(_toConsumableArray(columnLabels.map((function(value,index){return{index:void 0,label:value,isHeader:!0,position:{row:-1,column:index}}}))),values).map((function(_ref,mapIndex){var _props$text,index=_ref.index,label=_ref.label,isHeader=_ref.isHeader,position=_ref.position;if(isHeader){var _props$headerText,_props$headerClassNam,_props$headerStyle,headerCell={label:label,position:position},renderHeader=null===(_props$headerText=props.headerText)||void 0===_props$headerText?void 0:_props$headerText.call(props,headerCell);return Object(jsx_runtime.jsx)("div",{className:null===(_props$headerClassNam=props.headerClassName)||void 0===_props$headerClassNam?void 0:_props$headerClassNam.call(props,headerCell),style:Object.assign({},cellStyle,null===(_props$headerStyle=props.headerStyle)||void 0===_props$headerStyle?void 0:_props$headerStyle.call(props,headerCell),{padding:5,display:"flex",justifyContent:"center",alignItems:"center"}),children:void 0===renderHeader?label:renderHeader},"header-"+label+"-"+mapIndex)}var renderText=null===(_props$text=props.text)||void 0===_props$text?void 0:_props$text.call(props,index);return Object(jsx_runtime.jsx)("div",{style:Object.assign({padding:5,display:"flex",justifyContent:"center",alignItems:"center"},cellStyle,props.wellStyle(index)),className:props.wellClassName(index),onClick:props.onClick&&function(e){return props.onClick(index,e)},onMouseEnter:props.onEnter&&function(e){return props.onEnter(index,e)},onMouseLeave:props.onLeave&&function(e){return props.onLeave(index,e)},onMouseUp:props.onMouseUp&&function(e){return props.onMouseUp(index,e)},onMouseDown:props.onMouseDown&&function(e){return props.onMouseDown(index,e)},children:Object(jsx_runtime.jsx)("div",{children:void 0===renderText?label:renderText})},index)}))})}function DefaultWellPlateInternal(props){var plate=props.plate,_props$wellSize=props.wellSize,wellSize=void 0===_props$wellSize?40:_props$wellSize,rowLabels=plate.rowLabels,columnLabels=plate.columnLabels,headerStyle={width:wellSize,textAlign:"center"},wellStyle={width:wellSize,height:wellSize},rowStyle={display:"flex",alignItems:"center",height:wellSize},boxStyle=Object.assign({paddingBottom:4,paddingRight:4,borderWidth:1,borderStyle:"solid",borderColor:"black",width:wellSize*(plate.columns+1)+4+1},plateDefaultStyles),headerColumnLabels=columnLabels.map((function(columnLabel,index){var _props$headerStyle2;return Object(jsx_runtime.jsx)("div",{style:Object.assign({},headerStyle,null===(_props$headerStyle2=props.headerStyle)||void 0===_props$headerStyle2?void 0:_props$headerStyle2.call(props,{label:columnLabel,position:{column:index,row:-1}})),children:columnLabel},columnLabel)})),rows=rowLabels.map((function(rowLabel,rowIdx){var _props$headerStyle3,columns=columnLabels.map((function(columnLabel,columnIdx){var _props$wellClassName,_props$wellStyle,index=plate.getPosition({row:rowIdx,column:columnIdx},"index");return Object(jsx_runtime.jsx)("div",{style:wellStyle,children:Object(jsx_runtime.jsx)(util_Well,{wellPlate:plate,className:null===(_props$wellClassName=props.wellClassName)||void 0===_props$wellClassName?void 0:_props$wellClassName.call(props,index),style:null===(_props$wellStyle=props.wellStyle)||void 0===_props$wellStyle?void 0:_props$wellStyle.call(props,index),onClick:props.onClick,onEnter:props.onEnter,onLeave:props.onLeave,onMouseDown:props.onMouseDown,onMouseUp:props.onMouseUp,text:props.text,value:index,size:wellSize})},columnLabel)}));return Object(jsx_runtime.jsxs)("div",{style:rowStyle,children:[Object(jsx_runtime.jsx)("div",{style:Object.assign({},headerStyle,null===(_props$headerStyle3=props.headerStyle)||void 0===_props$headerStyle3?void 0:_props$headerStyle3.call(props,{label:rowLabel,position:{column:-1,row:rowIdx}})),children:rowLabel}),columns]},rowLabel)}));return Object(jsx_runtime.jsxs)("div",{style:boxStyle,children:[Object(jsx_runtime.jsxs)("div",{style:rowStyle,children:[Object(jsx_runtime.jsx)("div",{style:headerStyle}),headerColumnLabels]}),rows]})}WellPlateInternal_WellPlateInternal.displayName="WellPlateInternal",GridWellPlateInternal.displayName="GridWellPlateInternal",DefaultWellPlateInternal.displayName="DefaultWellPlateInternal";try{WellPlateInternal_WellPlateInternal.displayName="WellPlateInternal",WellPlateInternal_WellPlateInternal.__docgenInfo={description:"",displayName:"WellPlateInternal",props:{plate:{defaultValue:null,description:"",name:"plate",required:!0,type:{name:"WellPlate<unknown>"}},displayAsGrid:{defaultValue:null,description:"",name:"displayAsGrid",required:!1,type:{name:"boolean"}},onEnter:{defaultValue:null,description:"",name:"onEnter",required:!1,type:{name:"(index: number, e: SyntheticEvent<Element, Event>) => void"}},onLeave:{defaultValue:null,description:"",name:"onLeave",required:!1,type:{name:"(index: number, e: SyntheticEvent<Element, Event>) => void"}},onMouseDown:{defaultValue:null,description:"",name:"onMouseDown",required:!1,type:{name:"(index: number, e: MouseEvent<Element, MouseEvent>) => void"}},onMouseUp:{defaultValue:null,description:"",name:"onMouseUp",required:!1,type:{name:"(index: number, e: MouseEvent<Element, MouseEvent>) => void"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(index: number, e: MouseEvent<Element, MouseEvent>) => void"}},text:{defaultValue:null,description:"",name:"text",required:!1,type:{name:"(index: number) => ReactNode"}},wellClassName:{defaultValue:null,description:"",name:"wellClassName",required:!1,type:{name:"(index: number) => string"}},wellStyle:{defaultValue:null,description:"",name:"wellStyle",required:!1,type:{name:"(index: number) => CSSProperties"}},headerClassName:{defaultValue:null,description:"",name:"headerClassName",required:!1,type:{name:"(cell: HeaderCell) => string"}},headerStyle:{defaultValue:null,description:"",name:"headerStyle",required:!1,type:{name:"(cell: HeaderCell) => CSSProperties"}},headerText:{defaultValue:null,description:"",name:"headerText",required:!1,type:{name:"(cell: HeaderCell) => ReactNode"}},wellSize:{defaultValue:null,description:"",name:"wellSize",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/util/WellPlateInternal.tsx#WellPlateInternal"]={docgenInfo:WellPlateInternal_WellPlateInternal.__docgenInfo,name:"WellPlateInternal",path:"src/util/WellPlateInternal.tsx#WellPlateInternal"})}catch(__react_docgen_typescript_loader_error){}},"./stories sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$":function(module,exports,__webpack_require__){var map={"./grid.stories.tsx":"./stories/grid.stories.tsx","./wellPlate.stories.tsx":"./stories/wellPlate.stories.tsx","./wellPlatePicker.stories.tsx":"./stories/wellPlatePicker.stories.tsx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./stories sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$"},"./stories sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$":function(module,exports){function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=function(){return[]},webpackEmptyContext.resolve=webpackEmptyContext,module.exports=webpackEmptyContext,webpackEmptyContext.id="./stories sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$"},"./stories/grid.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"GridWellPlate",(function(){return GridWellPlate})),__webpack_require__.d(__webpack_exports__,"CustomGridWellPlate",(function(){return CustomGridWellPlate})),__webpack_require__.d(__webpack_exports__,"CustomWellPicker",(function(){return CustomWellPicker}));__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("./node_modules/react/index.js"),_src_index__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("./src/index.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["value"];function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}__webpack_exports__.default={parameters:{storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { Meta } from '@storybook/react';\\nimport React, { CSSProperties, useState } from 'react';\\n\\nimport {\\n  IWellPickerProps,\\n  MultiWellPicker,\\n  RangeSelectionMode,\\n  WellPlate,\\n} from '../src/index';\\n\\nexport default {\\n  title: 'Example/GridWellPlate',\\n  component: WellPlate,\\n  argTypes: {\\n    rows: {\\n      defaultValue: 8,\\n      control: 'number',\\n    },\\n    columns: {\\n      defaultValue: 12,\\n      control: 'number',\\n    },\\n  },\\n} as Meta;\\n\\nexport function GridWellPlate() {\\n  return (\\n    <WellPlate\\n      rows={8}\\n      columns={12}\\n      displayAsGrid\\n      headerStyle={({ position }) => {\\n        if (position.column % 2 === 0 && position.row === -1) {\\n          return {\\n            backgroundColor: 'rgb(202, 128, 245)',\\n          };\\n        }\\n\\n        if (position.row % 2 === 0 && position.column === -1) {\\n          return {\\n            backgroundColor: 'rgb(204, 211, 243)',\\n          };\\n        }\\n      }}\\n      wellStyle={({ position }) => {\\n        if (position.column % 2 === 0 && position.row % 2 === 0) {\\n          return {\\n            backgroundColor: 'rgb(202, 169, 204)',\\n          };\\n        } else if (position.column % 2 === 0 && position.row % 2 !== 0) {\\n          return {\\n            backgroundColor: 'rgb(202, 128, 245)',\\n          };\\n        } else if (position.column % 2 !== 0 && position.row % 2 === 0) {\\n          return {\\n            backgroundColor: 'rgb(204, 211, 243)',\\n          };\\n        } else {\\n          return {\\n            backgroundColor: 'white',\\n          };\\n        }\\n      }}\\n    />\\n  );\\n}\\n\\nexport function CustomGridWellPlate() {\\n  return (\\n    <WellPlate\\n      displayAsGrid\\n      rows={8}\\n      columns={12}\\n      wellSize={50}\\n      headerText={({ position }) => {\\n        if (position.column > 5) {\\n          return position.column;\\n        } else if (position.column > 3) {\\n          return null;\\n        } else if (position.column > 2) {\\n          return '';\\n        } else if (position.row > 6) {\\n          return position.row;\\n        } else if (position.row === 4) {\\n          return null;\\n        } else if (position.row === 3) {\\n          return '';\\n        }\\n      }}\\n      renderText={({ index }) => {\\n        if (index === 0) {\\n          return undefined;\\n        } else if (index === 1) {\\n          return null;\\n        } else if (index === 2) {\\n          return '';\\n        } else {\\n          return (\\n            <div style={{ fontSize: 12 }}>\\n              <div>test</div>\\n              <div>{index}</div>\\n            </div>\\n          );\\n        }\\n      }}\\n      wellStyle={({ wellPlate, index }) => {\\n        const factor = Math.round(\\n          (index / (wellPlate.rows * wellPlate.columns)) * 120 + (255 - 120),\\n        );\\n        return {\\n          backgroundColor: `rgb(${factor}, ${factor}, ${factor})`,\\n        };\\n      }}\\n    />\\n  );\\n}\\n\\nexport function CustomWellPicker() {\\n  return (\\n    <StateFullWellPicker\\n      displayAsGrid\\n      rows={8}\\n      columns={12}\\n      wellSize={50}\\n      renderText={({ index, label }) => {\\n        return (\\n          <div style={{ fontSize: 12 }}>\\n            <div>{label}</div>\\n            <div>{index}</div>\\n          </div>\\n        );\\n      }}\\n      value={[14]}\\n      disabled={[5, 20]}\\n      rangeSelectionMode={RangeSelectionMode.zone}\\n      style={({ index, wellPlate, disabled, booked, selected }) => {\\n        const position = wellPlate.getPosition(index, 'row_column');\\n        const styles: CSSProperties = {};\\n        if (disabled) {\\n          if (position.row === 1) {\\n            styles.backgroundColor = 'grey';\\n          } else {\\n            styles.backgroundColor = 'lightgray';\\n          }\\n        }\\n        if (selected) {\\n          styles.backgroundColor = 'pink';\\n        }\\n        if (booked && !disabled) {\\n          styles.borderColor = 'red';\\n        }\\n        return styles;\\n      }}\\n    />\\n  );\\n}\\n\\ntype IStateFullWellPickerProps = Omit<IWellPickerProps, 'onChange'>;\\n\\nfunction StateFullWellPicker(props: IStateFullWellPickerProps) {\\n  const { value: initialValue, ...otherProps } = props;\\n  const [value, setValue] = useState(initialValue);\\n\\n  return <MultiWellPicker value={value} onChange={setValue} {...otherProps} />;\\n}\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"GridWellPlate\":{\"startLoc\":{\"col\":7,\"line\":26},\"endLoc\":{\"col\":1,\"line\":66},\"startBody\":{\"col\":7,\"line\":26},\"endBody\":{\"col\":1,\"line\":66}},\"CustomGridWellPlate\":{\"startLoc\":{\"col\":7,\"line\":68},\"endLoc\":{\"col\":1,\"line\":116},\"startBody\":{\"col\":7,\"line\":68},\"endBody\":{\"col\":1,\"line\":116}},\"CustomWellPicker\":{\"startLoc\":{\"col\":7,\"line\":118},\"endLoc\":{\"col\":1,\"line\":156},\"startBody\":{\"col\":7,\"line\":118},\"endBody\":{\"col\":1,\"line\":156}}};\n    \nimport { Meta } from '@storybook/react';\nimport React, { CSSProperties, useState } from 'react';\n\nimport {\n  IWellPickerProps,\n  MultiWellPicker,\n  RangeSelectionMode,\n  WellPlate,\n} from '../src/index';\n\nexport default {\n  title: 'Example/GridWellPlate',\n  component: WellPlate,\n  argTypes: {\n    rows: {\n      defaultValue: 8,\n      control: 'number',\n    },\n    columns: {\n      defaultValue: 12,\n      control: 'number',\n    },\n  },\n} as Meta;\n\nexport const GridWellPlate = function GridWellPlate() {\n  return (\n    <WellPlate\n      rows={8}\n      columns={12}\n      displayAsGrid\n      headerStyle={({ position }) => {\n        if (position.column % 2 === 0 && position.row === -1) {\n          return {\n            backgroundColor: 'rgb(202, 128, 245)',\n          };\n        }\n\n        if (position.row % 2 === 0 && position.column === -1) {\n          return {\n            backgroundColor: 'rgb(204, 211, 243)',\n          };\n        }\n      }}\n      wellStyle={({ position }) => {\n        if (position.column % 2 === 0 && position.row % 2 === 0) {\n          return {\n            backgroundColor: 'rgb(202, 169, 204)',\n          };\n        } else if (position.column % 2 === 0 && position.row % 2 !== 0) {\n          return {\n            backgroundColor: 'rgb(202, 128, 245)',\n          };\n        } else if (position.column % 2 !== 0 && position.row % 2 === 0) {\n          return {\n            backgroundColor: 'rgb(204, 211, 243)',\n          };\n        } else {\n          return {\n            backgroundColor: 'white',\n          };\n        }\n      }}\n    />\n  );\n};\n\nexport const CustomGridWellPlate = function CustomGridWellPlate() {\n  return (\n    <WellPlate\n      displayAsGrid\n      rows={8}\n      columns={12}\n      wellSize={50}\n      headerText={({ position }) => {\n        if (position.column > 5) {\n          return position.column;\n        } else if (position.column > 3) {\n          return null;\n        } else if (position.column > 2) {\n          return '';\n        } else if (position.row > 6) {\n          return position.row;\n        } else if (position.row === 4) {\n          return null;\n        } else if (position.row === 3) {\n          return '';\n        }\n      }}\n      renderText={({ index }) => {\n        if (index === 0) {\n          return undefined;\n        } else if (index === 1) {\n          return null;\n        } else if (index === 2) {\n          return '';\n        } else {\n          return (\n            <div style={{ fontSize: 12 }}>\n              <div>test</div>\n              <div>{index}</div>\n            </div>\n          );\n        }\n      }}\n      wellStyle={({ wellPlate, index }) => {\n        const factor = Math.round(\n          (index / (wellPlate.rows * wellPlate.columns)) * 120 + (255 - 120),\n        );\n        return {\n          backgroundColor: `rgb(${factor}, ${factor}, ${factor})`,\n        };\n      }}\n    />\n  );\n};\n\nexport const CustomWellPicker = function CustomWellPicker() {\n  return (\n    <StateFullWellPicker\n      displayAsGrid\n      rows={8}\n      columns={12}\n      wellSize={50}\n      renderText={({ index, label }) => {\n        return (\n          <div style={{ fontSize: 12 }}>\n            <div>{label}</div>\n            <div>{index}</div>\n          </div>\n        );\n      }}\n      value={[14]}\n      disabled={[5, 20]}\n      rangeSelectionMode={RangeSelectionMode.zone}\n      style={({ index, wellPlate, disabled, booked, selected }) => {\n        const position = wellPlate.getPosition(index, 'row_column');\n        const styles: CSSProperties = {};\n        if (disabled) {\n          if (position.row === 1) {\n            styles.backgroundColor = 'grey';\n          } else {\n            styles.backgroundColor = 'lightgray';\n          }\n        }\n        if (selected) {\n          styles.backgroundColor = 'pink';\n        }\n        if (booked && !disabled) {\n          styles.borderColor = 'red';\n        }\n        return styles;\n      }}\n    />\n  );\n};\ntype IStateFullWellPickerProps = Omit<IWellPickerProps, 'onChange'>;\n\nfunction StateFullWellPicker(props: IStateFullWellPickerProps) {\n  const { value: initialValue, ...otherProps } = props;\n  const [value, setValue] = useState(initialValue);\n\n  return <MultiWellPicker value={value} onChange={setValue} {...otherProps} />;\n}\n\n\n\nGridWellPlate.parameters = { storySource: { source: \"function GridWellPlate() {\\n  return (\\n    <WellPlate\\n      rows={8}\\n      columns={12}\\n      displayAsGrid\\n      headerStyle={({ position }) => {\\n        if (position.column % 2 === 0 && position.row === -1) {\\n          return {\\n            backgroundColor: 'rgb(202, 128, 245)',\\n          };\\n        }\\n\\n        if (position.row % 2 === 0 && position.column === -1) {\\n          return {\\n            backgroundColor: 'rgb(204, 211, 243)',\\n          };\\n        }\\n      }}\\n      wellStyle={({ position }) => {\\n        if (position.column % 2 === 0 && position.row % 2 === 0) {\\n          return {\\n            backgroundColor: 'rgb(202, 169, 204)',\\n          };\\n        } else if (position.column % 2 === 0 && position.row % 2 !== 0) {\\n          return {\\n            backgroundColor: 'rgb(202, 128, 245)',\\n          };\\n        } else if (position.column % 2 !== 0 && position.row % 2 === 0) {\\n          return {\\n            backgroundColor: 'rgb(204, 211, 243)',\\n          };\\n        } else {\\n          return {\\n            backgroundColor: 'white',\\n          };\\n        }\\n      }}\\n    />\\n  );\\n}\" }, ...GridWellPlate.parameters };\nCustomGridWellPlate.parameters = { storySource: { source: \"function CustomGridWellPlate() {\\n  return (\\n    <WellPlate\\n      displayAsGrid\\n      rows={8}\\n      columns={12}\\n      wellSize={50}\\n      headerText={({ position }) => {\\n        if (position.column > 5) {\\n          return position.column;\\n        } else if (position.column > 3) {\\n          return null;\\n        } else if (position.column > 2) {\\n          return '';\\n        } else if (position.row > 6) {\\n          return position.row;\\n        } else if (position.row === 4) {\\n          return null;\\n        } else if (position.row === 3) {\\n          return '';\\n        }\\n      }}\\n      renderText={({ index }) => {\\n        if (index === 0) {\\n          return undefined;\\n        } else if (index === 1) {\\n          return null;\\n        } else if (index === 2) {\\n          return '';\\n        } else {\\n          return (\\n            <div style={{ fontSize: 12 }}>\\n              <div>test</div>\\n              <div>{index}</div>\\n            </div>\\n          );\\n        }\\n      }}\\n      wellStyle={({ wellPlate, index }) => {\\n        const factor = Math.round(\\n          (index / (wellPlate.rows * wellPlate.columns)) * 120 + (255 - 120),\\n        );\\n        return {\\n          backgroundColor: `rgb(${factor}, ${factor}, ${factor})`,\\n        };\\n      }}\\n    />\\n  );\\n}\" }, ...CustomGridWellPlate.parameters };\nCustomWellPicker.parameters = { storySource: { source: \"function CustomWellPicker() {\\n  return (\\n    <StateFullWellPicker\\n      displayAsGrid\\n      rows={8}\\n      columns={12}\\n      wellSize={50}\\n      renderText={({ index, label }) => {\\n        return (\\n          <div style={{ fontSize: 12 }}>\\n            <div>{label}</div>\\n            <div>{index}</div>\\n          </div>\\n        );\\n      }}\\n      value={[14]}\\n      disabled={[5, 20]}\\n      rangeSelectionMode={RangeSelectionMode.zone}\\n      style={({ index, wellPlate, disabled, booked, selected }) => {\\n        const position = wellPlate.getPosition(index, 'row_column');\\n        const styles: CSSProperties = {};\\n        if (disabled) {\\n          if (position.row === 1) {\\n            styles.backgroundColor = 'grey';\\n          } else {\\n            styles.backgroundColor = 'lightgray';\\n          }\\n        }\\n        if (selected) {\\n          styles.backgroundColor = 'pink';\\n        }\\n        if (booked && !disabled) {\\n          styles.borderColor = 'red';\\n        }\\n        return styles;\\n      }}\\n    />\\n  );\\n}\" }, ...CustomWellPicker.parameters };",locationsMap:{"grid-well-plate":{startLoc:{col:29,line:34},endLoc:{col:1,line:74},startBody:{col:29,line:34},endBody:{col:1,line:74}},"custom-grid-well-plate":{startLoc:{col:35,line:76},endLoc:{col:1,line:124},startBody:{col:35,line:76},endBody:{col:1,line:124}},"custom-well-picker":{startLoc:{col:32,line:126},endLoc:{col:1,line:164},startBody:{col:32,line:126},endBody:{col:1,line:164}}}}},title:"Example/GridWellPlate",component:_src_index__WEBPACK_IMPORTED_MODULE_15__.c,argTypes:{rows:{defaultValue:8,control:"number"},columns:{defaultValue:12,control:"number"}}};var GridWellPlate=function GridWellPlate(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsx)(_src_index__WEBPACK_IMPORTED_MODULE_15__.c,{rows:8,columns:12,displayAsGrid:!0,headerStyle:function headerStyle(_ref){var position=_ref.position;return position.column%2==0&&-1===position.row?{backgroundColor:"rgb(202, 128, 245)"}:position.row%2==0&&-1===position.column?{backgroundColor:"rgb(204, 211, 243)"}:void 0},wellStyle:function wellStyle(_ref2){var position=_ref2.position;return position.column%2==0&&position.row%2==0?{backgroundColor:"rgb(202, 169, 204)"}:position.column%2==0&&position.row%2!=0?{backgroundColor:"rgb(202, 128, 245)"}:position.column%2!=0&&position.row%2==0?{backgroundColor:"rgb(204, 211, 243)"}:{backgroundColor:"white"}}})};GridWellPlate.displayName="GridWellPlate";var CustomGridWellPlate=function CustomGridWellPlate(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsx)(_src_index__WEBPACK_IMPORTED_MODULE_15__.c,{displayAsGrid:!0,rows:8,columns:12,wellSize:50,headerText:function headerText(_ref3){var position=_ref3.position;return position.column>5?position.column:position.column>3?null:position.column>2?"":position.row>6?position.row:4===position.row?null:3===position.row?"":void 0},renderText:function renderText(_ref4){var index=_ref4.index;return 0===index?void 0:1===index?null:2===index?"":Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsxs)("div",{style:{fontSize:12},children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsx)("div",{children:"test"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsx)("div",{children:index})]})},wellStyle:function wellStyle(_ref5){var wellPlate=_ref5.wellPlate,index=_ref5.index,factor=Math.round(index/(wellPlate.rows*wellPlate.columns)*120+135);return{backgroundColor:"rgb("+factor+", "+factor+", "+factor+")"}}})};CustomGridWellPlate.displayName="CustomGridWellPlate";var CustomWellPicker=function CustomWellPicker(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsx)(StateFullWellPicker,{displayAsGrid:!0,rows:8,columns:12,wellSize:50,renderText:function renderText(_ref6){var index=_ref6.index,label=_ref6.label;return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsxs)("div",{style:{fontSize:12},children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsx)("div",{children:label}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsx)("div",{children:index})]})},value:[14],disabled:[5,20],rangeSelectionMode:_src_index__WEBPACK_IMPORTED_MODULE_15__.b.zone,style:function style(_ref7){var index=_ref7.index,wellPlate=_ref7.wellPlate,disabled=_ref7.disabled,booked=_ref7.booked,selected=_ref7.selected,position=wellPlate.getPosition(index,"row_column"),styles={};return disabled&&(1===position.row?styles.backgroundColor="grey":styles.backgroundColor="lightgray"),selected&&(styles.backgroundColor="pink"),booked&&!disabled&&(styles.borderColor="red"),styles}})};function StateFullWellPicker(props){var initialValue=props.value,otherProps=_objectWithoutProperties(props,_excluded),_useState2=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_14__.useState)(initialValue),2),value=_useState2[0],setValue=_useState2[1];return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsx)(_src_index__WEBPACK_IMPORTED_MODULE_15__.a,Object.assign({value:value,onChange:setValue},otherProps))}CustomWellPicker.displayName="CustomWellPicker",StateFullWellPicker.displayName="StateFullWellPicker",GridWellPlate.parameters=Object.assign({storySource:{source:"function GridWellPlate() {\n  return (\n    <WellPlate\n      rows={8}\n      columns={12}\n      displayAsGrid\n      headerStyle={({ position }) => {\n        if (position.column % 2 === 0 && position.row === -1) {\n          return {\n            backgroundColor: 'rgb(202, 128, 245)',\n          };\n        }\n\n        if (position.row % 2 === 0 && position.column === -1) {\n          return {\n            backgroundColor: 'rgb(204, 211, 243)',\n          };\n        }\n      }}\n      wellStyle={({ position }) => {\n        if (position.column % 2 === 0 && position.row % 2 === 0) {\n          return {\n            backgroundColor: 'rgb(202, 169, 204)',\n          };\n        } else if (position.column % 2 === 0 && position.row % 2 !== 0) {\n          return {\n            backgroundColor: 'rgb(202, 128, 245)',\n          };\n        } else if (position.column % 2 !== 0 && position.row % 2 === 0) {\n          return {\n            backgroundColor: 'rgb(204, 211, 243)',\n          };\n        } else {\n          return {\n            backgroundColor: 'white',\n          };\n        }\n      }}\n    />\n  );\n}"}},GridWellPlate.parameters),CustomGridWellPlate.parameters=Object.assign({storySource:{source:"function CustomGridWellPlate() {\n  return (\n    <WellPlate\n      displayAsGrid\n      rows={8}\n      columns={12}\n      wellSize={50}\n      headerText={({ position }) => {\n        if (position.column > 5) {\n          return position.column;\n        } else if (position.column > 3) {\n          return null;\n        } else if (position.column > 2) {\n          return '';\n        } else if (position.row > 6) {\n          return position.row;\n        } else if (position.row === 4) {\n          return null;\n        } else if (position.row === 3) {\n          return '';\n        }\n      }}\n      renderText={({ index }) => {\n        if (index === 0) {\n          return undefined;\n        } else if (index === 1) {\n          return null;\n        } else if (index === 2) {\n          return '';\n        } else {\n          return (\n            <div style={{ fontSize: 12 }}>\n              <div>test</div>\n              <div>{index}</div>\n            </div>\n          );\n        }\n      }}\n      wellStyle={({ wellPlate, index }) => {\n        const factor = Math.round(\n          (index / (wellPlate.rows * wellPlate.columns)) * 120 + (255 - 120),\n        );\n        return {\n          backgroundColor: `rgb(${factor}, ${factor}, ${factor})`,\n        };\n      }}\n    />\n  );\n}"}},CustomGridWellPlate.parameters),CustomWellPicker.parameters=Object.assign({storySource:{source:"function CustomWellPicker() {\n  return (\n    <StateFullWellPicker\n      displayAsGrid\n      rows={8}\n      columns={12}\n      wellSize={50}\n      renderText={({ index, label }) => {\n        return (\n          <div style={{ fontSize: 12 }}>\n            <div>{label}</div>\n            <div>{index}</div>\n          </div>\n        );\n      }}\n      value={[14]}\n      disabled={[5, 20]}\n      rangeSelectionMode={RangeSelectionMode.zone}\n      style={({ index, wellPlate, disabled, booked, selected }) => {\n        const position = wellPlate.getPosition(index, 'row_column');\n        const styles: CSSProperties = {};\n        if (disabled) {\n          if (position.row === 1) {\n            styles.backgroundColor = 'grey';\n          } else {\n            styles.backgroundColor = 'lightgray';\n          }\n        }\n        if (selected) {\n          styles.backgroundColor = 'pink';\n        }\n        if (booked && !disabled) {\n          styles.borderColor = 'red';\n        }\n        return styles;\n      }}\n    />\n  );\n}"}},CustomWellPicker.parameters)},"./stories/wellPlate.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Control",(function(){return Control})),__webpack_require__.d(__webpack_exports__,"SmallWellPlate",(function(){return SmallWellPlate})),__webpack_require__.d(__webpack_exports__,"LargeWellPlate",(function(){return LargeWellPlate})),__webpack_require__.d(__webpack_exports__,"CustomWellPlate",(function(){return CustomWellPlate}));__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _src_index__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/index.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={parameters:{storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "import { Meta } from \'@storybook/react\';\\nimport React from \'react\';\\n\\nimport { WellPlate, IWellPlateProps } from \'../src/index\';\\n\\nexport default {\\n  title: \'Example/WellPlate\',\\n  component: WellPlate,\\n  argTypes: {\\n    rows: {\\n      defaultValue: 8,\\n      control: \'number\',\\n    },\\n    columns: {\\n      defaultValue: 12,\\n      control: \'number\',\\n    },\\n  },\\n} as Meta;\\n\\nexport function Control(props: IWellPlateProps) {\\n  return <WellPlate {...props} />;\\n}\\n\\nexport function SmallWellPlate() {\\n  return (\\n    <WellPlate\\n      rows={8}\\n      columns={12}\\n      wellSize={30}\\n      wellStyle={() => ({\\n        fontSize: \'x-small\',\\n      })}\\n    />\\n  );\\n}\\n\\nexport function LargeWellPlate() {\\n  return <WellPlate rows={8} columns={12} wellSize={60} />;\\n}\\n\\nexport function CustomWellPlate() {\\n  return (\\n    <WellPlate\\n      rows={8}\\n      columns={12}\\n      wellSize={50}\\n      headerText={({ position }) => {\\n        if (position.column > 5) {\\n          return position.column;\\n        } else if (position.column > 3) {\\n          return null;\\n        } else if (position.column > 2) {\\n          return \'\';\\n        } else if (position.row > 6) {\\n          return position.row;\\n        } else if (position.row === 4) {\\n          return null;\\n        } else if (position.row === 3) {\\n          return \'\';\\n        }\\n      }}\\n      renderText={({ index }) => {\\n        if (index === 0) {\\n          return null;\\n        } else if (index === 1) {\\n          return \'\';\\n        } else if (index === 2) {\\n          return null;\\n        } else {\\n          return (\\n            <div style={{ fontSize: 12 }}>\\n              <div>test</div>\\n              <div>{index}</div>\\n            </div>\\n          );\\n        }\\n      }}\\n      wellStyle={({ label, wellPlate }) => {\\n        const factor = Math.round(\\n          (wellPlate.getPosition(label, \'index\') /\\n            (wellPlate.rows * wellPlate.columns)) *\\n            120 +\\n            (255 - 120),\\n        );\\n        return {\\n          backgroundColor: `rgb(${factor}, ${factor}, ${factor})`,\\n          borderColor: \'green\',\\n          borderWidth: 2,\\n        };\\n      }}\\n    />\\n  );\\n}\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Control":{"startLoc":{"col":7,"line":21},"endLoc":{"col":1,"line":23},"startBody":{"col":7,"line":21},"endBody":{"col":1,"line":23}},"SmallWellPlate":{"startLoc":{"col":7,"line":25},"endLoc":{"col":1,"line":36},"startBody":{"col":7,"line":25},"endBody":{"col":1,"line":36}},"LargeWellPlate":{"startLoc":{"col":7,"line":38},"endLoc":{"col":1,"line":40},"startBody":{"col":7,"line":38},"endBody":{"col":1,"line":40}},"CustomWellPlate":{"startLoc":{"col":7,"line":42},"endLoc":{"col":1,"line":94},"startBody":{"col":7,"line":42},"endBody":{"col":1,"line":94}}};\n    \nimport { Meta } from \'@storybook/react\';\nimport React from \'react\';\n\nimport { WellPlate, IWellPlateProps } from \'../src/index\';\n\nexport default {\n  title: \'Example/WellPlate\',\n  component: WellPlate,\n  argTypes: {\n    rows: {\n      defaultValue: 8,\n      control: \'number\',\n    },\n    columns: {\n      defaultValue: 12,\n      control: \'number\',\n    },\n  },\n} as Meta;\n\nexport const Control = function Control(props: IWellPlateProps) {\n  return <WellPlate {...props} />;\n};\n\nexport const SmallWellPlate = function SmallWellPlate() {\n  return (\n    <WellPlate\n      rows={8}\n      columns={12}\n      wellSize={30}\n      wellStyle={() => ({\n        fontSize: \'x-small\',\n      })}\n    />\n  );\n};\n\nexport const LargeWellPlate = function LargeWellPlate() {\n  return <WellPlate rows={8} columns={12} wellSize={60} />;\n};\n\nexport const CustomWellPlate = function CustomWellPlate() {\n  return (\n    <WellPlate\n      rows={8}\n      columns={12}\n      wellSize={50}\n      headerText={({ position }) => {\n        if (position.column > 5) {\n          return position.column;\n        } else if (position.column > 3) {\n          return null;\n        } else if (position.column > 2) {\n          return \'\';\n        } else if (position.row > 6) {\n          return position.row;\n        } else if (position.row === 4) {\n          return null;\n        } else if (position.row === 3) {\n          return \'\';\n        }\n      }}\n      renderText={({ index }) => {\n        if (index === 0) {\n          return null;\n        } else if (index === 1) {\n          return \'\';\n        } else if (index === 2) {\n          return null;\n        } else {\n          return (\n            <div style={{ fontSize: 12 }}>\n              <div>test</div>\n              <div>{index}</div>\n            </div>\n          );\n        }\n      }}\n      wellStyle={({ label, wellPlate }) => {\n        const factor = Math.round(\n          (wellPlate.getPosition(label, \'index\') /\n            (wellPlate.rows * wellPlate.columns)) *\n            120 +\n            (255 - 120),\n        );\n        return {\n          backgroundColor: `rgb(${factor}, ${factor}, ${factor})`,\n          borderColor: \'green\',\n          borderWidth: 2,\n        };\n      }}\n    />\n  );\n};\n\n\nControl.parameters = { storySource: { source: "function Control(props: IWellPlateProps) {\\n  return <WellPlate {...props} />;\\n}" }, ...Control.parameters };\nSmallWellPlate.parameters = { storySource: { source: "function SmallWellPlate() {\\n  return (\\n    <WellPlate\\n      rows={8}\\n      columns={12}\\n      wellSize={30}\\n      wellStyle={() => ({\\n        fontSize: \'x-small\',\\n      })}\\n    />\\n  );\\n}" }, ...SmallWellPlate.parameters };\nLargeWellPlate.parameters = { storySource: { source: "function LargeWellPlate() {\\n  return <WellPlate rows={8} columns={12} wellSize={60} />;\\n}" }, ...LargeWellPlate.parameters };\nCustomWellPlate.parameters = { storySource: { source: "function CustomWellPlate() {\\n  return (\\n    <WellPlate\\n      rows={8}\\n      columns={12}\\n      wellSize={50}\\n      headerText={({ position }) => {\\n        if (position.column > 5) {\\n          return position.column;\\n        } else if (position.column > 3) {\\n          return null;\\n        } else if (position.column > 2) {\\n          return \'\';\\n        } else if (position.row > 6) {\\n          return position.row;\\n        } else if (position.row === 4) {\\n          return null;\\n        } else if (position.row === 3) {\\n          return \'\';\\n        }\\n      }}\\n      renderText={({ index }) => {\\n        if (index === 0) {\\n          return null;\\n        } else if (index === 1) {\\n          return \'\';\\n        } else if (index === 2) {\\n          return null;\\n        } else {\\n          return (\\n            <div style={{ fontSize: 12 }}>\\n              <div>test</div>\\n              <div>{index}</div>\\n            </div>\\n          );\\n        }\\n      }}\\n      wellStyle={({ label, wellPlate }) => {\\n        const factor = Math.round(\\n          (wellPlate.getPosition(label, \'index\') /\\n            (wellPlate.rows * wellPlate.columns)) *\\n            120 +\\n            (255 - 120),\\n        );\\n        return {\\n          backgroundColor: `rgb(${factor}, ${factor}, ${factor})`,\\n          borderColor: \'green\',\\n          borderWidth: 2,\\n        };\\n      }}\\n    />\\n  );\\n}" }, ...CustomWellPlate.parameters };',locationsMap:{control:{startLoc:{col:23,line:29},endLoc:{col:1,line:31},startBody:{col:23,line:29},endBody:{col:1,line:31}},"small-well-plate":{startLoc:{col:30,line:33},endLoc:{col:1,line:44},startBody:{col:30,line:33},endBody:{col:1,line:44}},"large-well-plate":{startLoc:{col:30,line:46},endLoc:{col:1,line:48},startBody:{col:30,line:46},endBody:{col:1,line:48}},"custom-well-plate":{startLoc:{col:31,line:50},endLoc:{col:1,line:102},startBody:{col:31,line:50},endBody:{col:1,line:102}}}}},title:"Example/WellPlate",component:_src_index__WEBPACK_IMPORTED_MODULE_2__.c,argTypes:{rows:{defaultValue:8,control:"number"},columns:{defaultValue:12,control:"number"}}};var Control=function Control(props){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_src_index__WEBPACK_IMPORTED_MODULE_2__.c,Object.assign({},props))};Control.displayName="Control";var SmallWellPlate=function SmallWellPlate(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_src_index__WEBPACK_IMPORTED_MODULE_2__.c,{rows:8,columns:12,wellSize:30,wellStyle:function wellStyle(){return{fontSize:"x-small"}}})};SmallWellPlate.displayName="SmallWellPlate";var LargeWellPlate=function LargeWellPlate(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_src_index__WEBPACK_IMPORTED_MODULE_2__.c,{rows:8,columns:12,wellSize:60})};LargeWellPlate.displayName="LargeWellPlate";var CustomWellPlate=function CustomWellPlate(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_src_index__WEBPACK_IMPORTED_MODULE_2__.c,{rows:8,columns:12,wellSize:50,headerText:function headerText(_ref){var position=_ref.position;return position.column>5?position.column:position.column>3?null:position.column>2?"":position.row>6?position.row:4===position.row?null:3===position.row?"":void 0},renderText:function renderText(_ref2){var index=_ref2.index;return 0===index?null:1===index?"":2===index?null:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{style:{fontSize:12},children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{children:"test"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{children:index})]})},wellStyle:function wellStyle(_ref3){var label=_ref3.label,wellPlate=_ref3.wellPlate,factor=Math.round(wellPlate.getPosition(label,"index")/(wellPlate.rows*wellPlate.columns)*120+135);return{backgroundColor:"rgb("+factor+", "+factor+", "+factor+")",borderColor:"green",borderWidth:2}}})};CustomWellPlate.displayName="CustomWellPlate",Control.parameters=Object.assign({storySource:{source:"function Control(props: IWellPlateProps) {\n  return <WellPlate {...props} />;\n}"}},Control.parameters),SmallWellPlate.parameters=Object.assign({storySource:{source:"function SmallWellPlate() {\n  return (\n    <WellPlate\n      rows={8}\n      columns={12}\n      wellSize={30}\n      wellStyle={() => ({\n        fontSize: 'x-small',\n      })}\n    />\n  );\n}"}},SmallWellPlate.parameters),LargeWellPlate.parameters=Object.assign({storySource:{source:"function LargeWellPlate() {\n  return <WellPlate rows={8} columns={12} wellSize={60} />;\n}"}},LargeWellPlate.parameters),CustomWellPlate.parameters=Object.assign({storySource:{source:"function CustomWellPlate() {\n  return (\n    <WellPlate\n      rows={8}\n      columns={12}\n      wellSize={50}\n      headerText={({ position }) => {\n        if (position.column > 5) {\n          return position.column;\n        } else if (position.column > 3) {\n          return null;\n        } else if (position.column > 2) {\n          return '';\n        } else if (position.row > 6) {\n          return position.row;\n        } else if (position.row === 4) {\n          return null;\n        } else if (position.row === 3) {\n          return '';\n        }\n      }}\n      renderText={({ index }) => {\n        if (index === 0) {\n          return null;\n        } else if (index === 1) {\n          return '';\n        } else if (index === 2) {\n          return null;\n        } else {\n          return (\n            <div style={{ fontSize: 12 }}>\n              <div>test</div>\n              <div>{index}</div>\n            </div>\n          );\n        }\n      }}\n      wellStyle={({ label, wellPlate }) => {\n        const factor = Math.round(\n          (wellPlate.getPosition(label, 'index') /\n            (wellPlate.rows * wellPlate.columns)) *\n            120 +\n            (255 - 120),\n        );\n        return {\n          backgroundColor: `rgb(${factor}, ${factor}, ${factor})`,\n          borderColor: 'green',\n          borderWidth: 2,\n        };\n      }}\n    />\n  );\n}"}},CustomWellPlate.parameters);try{Control.displayName="Control",Control.__docgenInfo={description:"",displayName:"Control",props:{rows:{defaultValue:null,description:"",name:"rows",required:!0,type:{name:"number"}},columns:{defaultValue:null,description:"",name:"columns",required:!0,type:{name:"number"}},format:{defaultValue:null,description:"",name:"format",required:!1,type:{name:"enum",value:[{value:'"SEQUENTIAL"'},{value:'"LETTER_NUMBER"'},{value:'"NUMBER_NUMBER"'}]}},displayAsGrid:{defaultValue:null,description:"",name:"displayAsGrid",required:!1,type:{name:"boolean"}},wellClassName:{defaultValue:null,description:"",name:"wellClassName",required:!1,type:{name:"(cell: Cell) => string"}},renderText:{defaultValue:null,description:"",name:"renderText",required:!1,type:{name:"(cell: Cell) => ReactNode"}},wellStyle:{defaultValue:null,description:"",name:"wellStyle",required:!1,type:{name:"(cell: Cell) => CSSProperties"}},headerClassName:{defaultValue:null,description:"",name:"headerClassName",required:!1,type:{name:"(cell: HeaderCell) => string"}},headerStyle:{defaultValue:null,description:"",name:"headerStyle",required:!1,type:{name:"(cell: HeaderCell) => CSSProperties"}},headerText:{defaultValue:null,description:"",name:"headerText",required:!1,type:{name:"(cell: HeaderCell) => ReactNode"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(value: number, label: string, wellPlate: WellPlate<unknown>, e: MouseEvent<Element, MouseEvent>) => void"}},onEnter:{defaultValue:null,description:"",name:"onEnter",required:!1,type:{name:"(value: number, label: string, wellPlate: WellPlate<unknown>, e: SyntheticEvent<Element, Event>) => void"}},onLeave:{defaultValue:null,description:"",name:"onLeave",required:!1,type:{name:"(value: number, label: string, wellPlate: WellPlate<unknown>, e: SyntheticEvent<Element, Event>) => void"}},onMouseDown:{defaultValue:null,description:"",name:"onMouseDown",required:!1,type:{name:"(value: number, label: string, wellPlate: WellPlate<unknown>, e: MouseEvent<Element, MouseEvent>) => void"}},onMouseUp:{defaultValue:null,description:"",name:"onMouseUp",required:!1,type:{name:"(value: number, label: string, wellPlate: WellPlate<unknown>, e: MouseEvent<Element, MouseEvent>) => void"}},wellSize:{defaultValue:null,description:"",name:"wellSize",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/wellPlate.stories.tsx#Control"]={docgenInfo:Control.__docgenInfo,name:"Control",path:"stories/wellPlate.stories.tsx#Control"})}catch(__react_docgen_typescript_loader_error){}},"./stories/wellPlatePicker.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"WellPicker",(function(){return WellPicker})),__webpack_require__.d(__webpack_exports__,"CustomWellPicker",(function(){return CustomWellPicker}));__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("./node_modules/react/index.js"),_src_WellPicker__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("./src/WellPicker.tsx"),_src_index__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__("./src/index.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["value"];function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}__webpack_exports__.default={parameters:{storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { Meta } from '@storybook/react';\\nimport React, { CSSProperties, useState } from 'react';\\n\\nimport { RangeSelectionMode } from '../src/WellPicker';\\nimport { IWellPickerProps, MultiWellPicker } from '../src/index';\\n\\nexport default {\\n  title: 'Example/MultiWellPicker',\\n  component: MultiWellPicker,\\n  argTypes: {\\n    rows: {\\n      defaultValue: 8,\\n      control: 'number',\\n    },\\n    columns: {\\n      defaultValue: 12,\\n      control: 'number',\\n    },\\n    value: {\\n      defaultValue: [8],\\n      control: 'array',\\n    },\\n    disabled: {\\n      defaultValue: [2],\\n      control: 'array',\\n    },\\n  },\\n} as Meta;\\n\\nexport function WellPicker(props: IWellPickerProps) {\\n  return <StateFullWellPicker {...props} />;\\n}\\n\\nexport function CustomWellPicker() {\\n  return (\\n    <StateFullWellPicker\\n      rows={8}\\n      columns={12}\\n      wellSize={50}\\n      renderText={({ index, label }) => {\\n        return (\\n          <div style={{ fontSize: 12 }}>\\n            <div>{label}</div>\\n            <div>{index}</div>\\n          </div>\\n        );\\n      }}\\n      value={[14]}\\n      disabled={[5, 20]}\\n      rangeSelectionMode={RangeSelectionMode.zone}\\n      style={({ index, wellPlate, disabled, booked, selected }) => {\\n        const position = wellPlate.getPosition(index, 'row_column');\\n        const styles: CSSProperties = {};\\n        if (disabled) {\\n          if (position.row === 1) {\\n            styles.backgroundColor = 'grey';\\n          } else {\\n            styles.backgroundColor = 'lightgray';\\n          }\\n        }\\n        if (selected) {\\n          styles.backgroundColor = 'pink';\\n        }\\n        if (booked && !disabled) {\\n          styles.borderColor = 'red';\\n        }\\n        return styles;\\n      }}\\n    />\\n  );\\n}\\n\\ntype IStateFullWellPickerProps = Omit<IWellPickerProps, 'onChange'>;\\n\\nfunction StateFullWellPicker(props: IStateFullWellPickerProps) {\\n  const { value: initialValue, ...otherProps } = props;\\n  const [value, setValue] = useState(initialValue);\\n\\n  return <MultiWellPicker value={value} onChange={setValue} {...otherProps} />;\\n}\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"WellPicker\":{\"startLoc\":{\"col\":7,\"line\":30},\"endLoc\":{\"col\":1,\"line\":32},\"startBody\":{\"col\":7,\"line\":30},\"endBody\":{\"col\":1,\"line\":32}},\"CustomWellPicker\":{\"startLoc\":{\"col\":7,\"line\":34},\"endLoc\":{\"col\":1,\"line\":71},\"startBody\":{\"col\":7,\"line\":34},\"endBody\":{\"col\":1,\"line\":71}}};\n    \nimport { Meta } from '@storybook/react';\nimport React, { CSSProperties, useState } from 'react';\n\nimport { RangeSelectionMode } from '../src/WellPicker';\nimport { IWellPickerProps, MultiWellPicker } from '../src/index';\n\nexport default {\n  title: 'Example/MultiWellPicker',\n  component: MultiWellPicker,\n  argTypes: {\n    rows: {\n      defaultValue: 8,\n      control: 'number',\n    },\n    columns: {\n      defaultValue: 12,\n      control: 'number',\n    },\n    value: {\n      defaultValue: [8],\n      control: 'array',\n    },\n    disabled: {\n      defaultValue: [2],\n      control: 'array',\n    },\n  },\n} as Meta;\n\nexport const WellPicker = function WellPicker(props: IWellPickerProps) {\n  return <StateFullWellPicker {...props} />;\n};\n\nexport const CustomWellPicker = function CustomWellPicker() {\n  return (\n    <StateFullWellPicker\n      rows={8}\n      columns={12}\n      wellSize={50}\n      renderText={({ index, label }) => {\n        return (\n          <div style={{ fontSize: 12 }}>\n            <div>{label}</div>\n            <div>{index}</div>\n          </div>\n        );\n      }}\n      value={[14]}\n      disabled={[5, 20]}\n      rangeSelectionMode={RangeSelectionMode.zone}\n      style={({ index, wellPlate, disabled, booked, selected }) => {\n        const position = wellPlate.getPosition(index, 'row_column');\n        const styles: CSSProperties = {};\n        if (disabled) {\n          if (position.row === 1) {\n            styles.backgroundColor = 'grey';\n          } else {\n            styles.backgroundColor = 'lightgray';\n          }\n        }\n        if (selected) {\n          styles.backgroundColor = 'pink';\n        }\n        if (booked && !disabled) {\n          styles.borderColor = 'red';\n        }\n        return styles;\n      }}\n    />\n  );\n};\ntype IStateFullWellPickerProps = Omit<IWellPickerProps, 'onChange'>;\n\nfunction StateFullWellPicker(props: IStateFullWellPickerProps) {\n  const { value: initialValue, ...otherProps } = props;\n  const [value, setValue] = useState(initialValue);\n\n  return <MultiWellPicker value={value} onChange={setValue} {...otherProps} />;\n}\n\n\n\nWellPicker.parameters = { storySource: { source: \"function WellPicker(props: IWellPickerProps) {\\n  return <StateFullWellPicker {...props} />;\\n}\" }, ...WellPicker.parameters };\nCustomWellPicker.parameters = { storySource: { source: \"function CustomWellPicker() {\\n  return (\\n    <StateFullWellPicker\\n      rows={8}\\n      columns={12}\\n      wellSize={50}\\n      renderText={({ index, label }) => {\\n        return (\\n          <div style={{ fontSize: 12 }}>\\n            <div>{label}</div>\\n            <div>{index}</div>\\n          </div>\\n        );\\n      }}\\n      value={[14]}\\n      disabled={[5, 20]}\\n      rangeSelectionMode={RangeSelectionMode.zone}\\n      style={({ index, wellPlate, disabled, booked, selected }) => {\\n        const position = wellPlate.getPosition(index, 'row_column');\\n        const styles: CSSProperties = {};\\n        if (disabled) {\\n          if (position.row === 1) {\\n            styles.backgroundColor = 'grey';\\n          } else {\\n            styles.backgroundColor = 'lightgray';\\n          }\\n        }\\n        if (selected) {\\n          styles.backgroundColor = 'pink';\\n        }\\n        if (booked && !disabled) {\\n          styles.borderColor = 'red';\\n        }\\n        return styles;\\n      }}\\n    />\\n  );\\n}\" }, ...CustomWellPicker.parameters };",locationsMap:{"well-picker":{startLoc:{col:26,line:38},endLoc:{col:1,line:40},startBody:{col:26,line:38},endBody:{col:1,line:40}},"custom-well-picker":{startLoc:{col:32,line:42},endLoc:{col:1,line:79},startBody:{col:32,line:42},endBody:{col:1,line:79}}}}},title:"Example/MultiWellPicker",component:_src_index__WEBPACK_IMPORTED_MODULE_16__.a,argTypes:{rows:{defaultValue:8,control:"number"},columns:{defaultValue:12,control:"number"},value:{defaultValue:[8],control:"array"},disabled:{defaultValue:[2],control:"array"}}};var WellPicker=function WellPicker(props){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(StateFullWellPicker,Object.assign({},props))};WellPicker.displayName="WellPicker";var CustomWellPicker=function CustomWellPicker(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(StateFullWellPicker,{rows:8,columns:12,wellSize:50,renderText:function renderText(_ref){var index=_ref.index,label=_ref.label;return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsxs)("div",{style:{fontSize:12},children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)("div",{children:label}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)("div",{children:index})]})},value:[14],disabled:[5,20],rangeSelectionMode:_src_WellPicker__WEBPACK_IMPORTED_MODULE_15__.b.zone,style:function style(_ref2){var index=_ref2.index,wellPlate=_ref2.wellPlate,disabled=_ref2.disabled,booked=_ref2.booked,selected=_ref2.selected,position=wellPlate.getPosition(index,"row_column"),styles={};return disabled&&(1===position.row?styles.backgroundColor="grey":styles.backgroundColor="lightgray"),selected&&(styles.backgroundColor="pink"),booked&&!disabled&&(styles.borderColor="red"),styles}})};function StateFullWellPicker(props){var initialValue=props.value,otherProps=_objectWithoutProperties(props,_excluded),_useState2=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_14__.useState)(initialValue),2),value=_useState2[0],setValue=_useState2[1];return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(_src_index__WEBPACK_IMPORTED_MODULE_16__.a,Object.assign({value:value,onChange:setValue},otherProps))}CustomWellPicker.displayName="CustomWellPicker",StateFullWellPicker.displayName="StateFullWellPicker",WellPicker.parameters=Object.assign({storySource:{source:"function WellPicker(props: IWellPickerProps) {\n  return <StateFullWellPicker {...props} />;\n}"}},WellPicker.parameters),CustomWellPicker.parameters=Object.assign({storySource:{source:"function CustomWellPicker() {\n  return (\n    <StateFullWellPicker\n      rows={8}\n      columns={12}\n      wellSize={50}\n      renderText={({ index, label }) => {\n        return (\n          <div style={{ fontSize: 12 }}>\n            <div>{label}</div>\n            <div>{index}</div>\n          </div>\n        );\n      }}\n      value={[14]}\n      disabled={[5, 20]}\n      rangeSelectionMode={RangeSelectionMode.zone}\n      style={({ index, wellPlate, disabled, booked, selected }) => {\n        const position = wellPlate.getPosition(index, 'row_column');\n        const styles: CSSProperties = {};\n        if (disabled) {\n          if (position.row === 1) {\n            styles.backgroundColor = 'grey';\n          } else {\n            styles.backgroundColor = 'lightgray';\n          }\n        }\n        if (selected) {\n          styles.backgroundColor = 'pink';\n        }\n        if (booked && !disabled) {\n          styles.borderColor = 'red';\n        }\n        return styles;\n      }}\n    />\n  );\n}"}},CustomWellPicker.parameters);try{WellPicker.displayName="WellPicker",WellPicker.__docgenInfo={description:"",displayName:"WellPicker",props:{displayAsGrid:{defaultValue:null,description:"",name:"displayAsGrid",required:!1,type:{name:"boolean"}},wellSize:{defaultValue:null,description:"",name:"wellSize",required:!1,type:{name:"number"}},rows:{defaultValue:null,description:"",name:"rows",required:!0,type:{name:"number"}},columns:{defaultValue:null,description:"",name:"columns",required:!0,type:{name:"number"}},format:{defaultValue:null,description:"",name:"format",required:!1,type:{name:"enum",value:[{value:'"SEQUENTIAL"'},{value:'"LETTER_NUMBER"'},{value:'"NUMBER_NUMBER"'}]}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"(string | number)[]"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"(string | number)[]"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(value: number[], label: string[]) => void"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleParam"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"ClassNameParam"}},renderText:{defaultValue:null,description:"",name:"renderText",required:!1,type:{name:"(cell: PickCell) => ReactNode"}},rangeSelectionMode:{defaultValue:null,description:"",name:"rangeSelectionMode",required:!1,type:{name:"enum",value:[{value:'"columns"'},{value:'"rows"'},{value:'"zone"'},{value:'"off"'}]}},pickMode:{defaultValue:null,description:"",name:"pickMode",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/wellPlatePicker.stories.tsx#WellPicker"]={docgenInfo:WellPicker.__docgenInfo,name:"WellPicker",path:"stories/wellPlatePicker.stories.tsx#WellPicker"})}catch(__react_docgen_typescript_loader_error){}},"./storybook-init-framework-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js")},0:function(module,exports,__webpack_require__){__webpack_require__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_require__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_require__("./storybook-init-framework-entry.js"),__webpack_require__("./node_modules/@storybook/react/dist/esm/client/docs/config-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/react/dist/esm/client/preview/config-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-links/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-docs/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-actions/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-backgrounds/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-measure/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-outline/preview.js-generated-config-entry.js"),__webpack_require__("./.storybook/preview.js-generated-config-entry.js"),module.exports=__webpack_require__("./generated-stories-entry.js")},1:function(module,exports){}},[[0,5,6]]]);